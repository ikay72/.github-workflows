apiVersion: v1
data:
  advanced.config: |-
    [
      {kernel, [
        {inet_default_connect_options, [{nodelay, true}]},
        {inet_default_listen_options,  [{nodelay, true}]}
      ]}
    ].
  rabbitmq.conf: |-
    log.default.level = warning
    log.connection.level = warning
    log.channel.level = info
    log.queue.level = info
    log.mirroring.level = info
    log.federation.level = info
    log.upgrade.level = info

    ## Username and password
    default_user = guest
    default_pass = guest
    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    # loopback_users.guest = true
    loopback_users = none
    load_definitions = /app/load_definition.json

    ## Prometheus metrics
    prometheus.tcp.port = 9419
    ## Memory Threshold
    total_memory_available_override_value = 2097152000
    vm_memory_high_watermark.relative = 0.9
    ssl_options.cacertfile = /etc/rabbitmq/certs/ca.crt
    ssl_options.certfile = /etc/rabbitmq/certs/tls.crt
    ssl_options.keyfile = /etc/rabbitmq/certs/tls.key
    ssl_options.verify = verify_peer
    ssl_options.fail_if_no_peer_cert = true
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
    meta.helm.sh/release-name: rabbitmq
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2024-02-04T17:17:05Z"
  labels:
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.20.1
  name: rabbitmq-config
  namespace: default
  resourceVersion: "151429633"
  uid: 4dc61dc0-f5db-43a1-ad4c-cbb037122a36
