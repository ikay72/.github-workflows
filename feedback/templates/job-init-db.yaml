{{ if .Values.fbconfig.feedbackdb.run_create }}
apiVersion: batch/v1
kind: Job
metadata:
  name: feedback-init-db
  annotations:
    {{- if .Values.argocd }}
    argocd.argoproj.io/sync-wave: "-2"
    argocd.argoproj.io/hook: "Sync"
    {{- else }}
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "-2"
    {{- end }}

spec:
  parallelism: 1
  completions: 1
  template:
    spec:
      serviceAccountName: {{ .Release.Namespace }}-main
      restartPolicy: Never
    {{- if .Values.mysql.customCaCert }}
      initContainers:
        {{- include "fbconfig.customCaInitContainer" . | nindent 8 }}
    {{- end }}
      containers:
        - name: feedback-init-db
          {{ $smtp_host := .Values.smtp.host }}
          image: {{ .Values.image.registry }}mysql:8.0
          command: ["/bin/sh", "-ec"]
          args:
            - >
              mysql {{ include "fbconfig.mysqlCliOptions" . }} -e "CREATE DATABASE IF NOT EXISTS \`${FEEDBACK_DB_NAME_DEFAULT}\` DEFAULT CHARACTER SET UTF8";
            {{- range .Values.enterprises }}
              mysql {{ include "fbconfig.mysqlCliOptions" $ }} -e "CREATE DATABASE IF NOT EXISTS \`{{ .dbname }}\` DEFAULT CHARACTER SET UTF8";
            {{- end }}
          env:
            - name: FEEDBACK_DB_HOST
              value: {{ .Values.fbconfig.feedbackdb.host | quote }}
            - name: FEEDBACK_DB_PORT
              value: {{ .Values.fbconfig.feedbackdb.port | quote }}
            - name: FEEDBACK_DB_NAME_DEFAULT
              value: {{ .Values.fbconfig.feedbackdb.default_name | quote }}
            - name: FEEDBACK_DB_USER
              value: {{ .Values.fbconfig.feedbackdb.username | quote }}
            - name: FEEDBACK_DB_PASSWORD
              value: {{ .Values.fbconfig.feedbackdb.password | quote }}
            - name: FEEDBACK_DEFAULT_DB_USER
              value: {{ .Values.fbconfig.feedbackdb.default_user | quote }}
            - name: FEEDBACK_DEFAULT_DB_PASSWORD
              value: {{ .Values.fbconfig.feedbackdb.default_password | quote }}

    {{- if .Values.mysql.customCaCert }}
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: false
      volumes:
        - name: mysql-custom-ca
          configMap:
            name: mysql-custom-ca
        - name: ssl-certs
          emptyDir: {}
    {{- end }}
{{ end }}
